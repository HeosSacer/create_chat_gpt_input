  build_and_upload:
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            asset_name: create_chat_gpt_input
          - os: windows-latest
            asset_name: create_chat_gpt_input.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Install upx for Linux
      - name: Install UPX (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y upx

      - name: Build release binary
        run: cargo build --release

      # Strip symbols and compress binary for Linux
      - name: Strip symbols and compress binary (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          strip target/release/${{ matrix.asset_name }}
          upx --best target/release/${{ matrix.asset_name }}

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_WORKFLOW_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/release/${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
